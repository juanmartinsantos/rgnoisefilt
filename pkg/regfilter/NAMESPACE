# Generated by roxygen2: do not edit by hand

S3method(discCNN,default)
S3method(discCNN,formula)
S3method(discENN,default)
S3method(discENN,formula)
S3method(discNCL,default)
S3method(discNCL,formula)
S3method(discTL,default)
S3method(discTL,formula)
S3method(plot,rfdata)
S3method(print,rfdata)
S3method(print,sum.rfdata)
S3method(regAENN,default)
S3method(regAENN,formula)
S3method(regBBNR,default)
S3method(regBBNR,formula)
S3method(regCNN,default)
S3method(regCNN,formula)
S3method(regCVCF,default)
S3method(regCVCF,formula)
S3method(regDF,default)
S3method(regDF,formula)
S3method(regEF,default)
S3method(regEF,formula)
S3method(regENN,default)
S3method(regENN,formula)
S3method(regFMF,default)
S3method(regFMF,formula)
S3method(regGE,default)
S3method(regGE,formula)
S3method(regHRRF,default)
S3method(regHRRF,formula)
S3method(regIPF,default)
S3method(regIPF,formula)
S3method(regIRF,default)
S3method(regIRF,formula)
S3method(regRND,default)
S3method(regRND,formula)
S3method(regRNN,default)
S3method(regRNN,formula)
S3method(rfCDF,default)
S3method(rfCDF,formula)
S3method(rfDROP2,default)
S3method(rfDROP2,formula)
S3method(rfDROP3,default)
S3method(rfDROP3,formula)
S3method(rfMIF,default)
S3method(rfMIF,formula)
S3method(summary,rfdata)
export(discCNN)
export(discENN)
export(discNCL)
export(discTL)
export(regAENN)
export(regBBNR)
export(regCNN)
export(regCVCF)
export(regDF)
export(regEF)
export(regENN)
export(regFMF)
export(regGE)
export(regHRRF)
export(regIPF)
export(regIRF)
export(regRND)
export(regRNN)
export(rfCDF)
export(rfDROP2)
export(rfDROP3)
export(rfMIF)
import("ggplot2")
import("modelr")
importFrom("FNN","get.knn")
importFrom("FNN","knn.reg")
importFrom("UBL","CNNClassif")
importFrom("UBL","ENNClassif")
importFrom("UBL","NCLClassif")
importFrom("UBL","TomekClassif")
importFrom("arules","discretize")
importFrom("arules","discretizeDF")
importFrom("e1071","svm")
importFrom("entropy","entropy")
importFrom("gbm","gbm")
importFrom("gbm","predict.gbm")
importFrom("infotheo","mutinformation")
importFrom("modelr","crossv_kfold")
importFrom("nnet","nnet")
importFrom("nnet","which.is.max")
importFrom("randomForest","randomForest")
importFrom("rpart","rpart")
importFrom("stats","as.formula")
importFrom("stats","lm")
importFrom("stats","model.frame")
importFrom("stats","predict")
importFrom("utils","capture.output")
